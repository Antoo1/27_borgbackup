---
- name: install borg client
  hosts: all
  become: true

  tasks:
    - name: update apt cache
      apt:
        update_cache: yes
        cache_valid_time: 86400

    - name: install required
      apt:
        name: 
          - borgbackup
          - acl
        state: present


- hosts: client
  gather_facts: false
  become: true
  tasks:
    - name: add user borg
      ansible.builtin.user:
        name: borg
        generate_ssh_key: true
        ssh_key_bits: 4096
        ssh_key_type: "ed25519"
      notify:
        - fetch client public ssh key
    
  handlers:
    - name: fetch client public ssh key
      fetch:
        src: /home/borg/.ssh/id_ed25519.pub
        dest: /tmp/
        flat: true


- name: Установка публичного ключа на backupserver
  hosts: backupserver
  become: yes

  tasks:
    - name: add user borg
      ansible.builtin.user:
        name: borg
    
    - name: put ssh key to backupserver
      copy:
       src: /tmp/id_ed25519.pub
       dest: /tmp/
      notify:
        - set authorized_key

  handlers:
  - name: set authorized_key
    authorized_key:
      user: borg
      key: "{{ lookup('file', '/tmp/id_ed25519.pub') }}"


- name: configure borg server
  hosts: backupserver
  become: true

  vars:
    - BACKUP_DIR: '/var/backup/'
    - REPO_DIR: '/var/backup/otus_repo/'
    - MOUNT_DISK: '/dev/sda'

  tasks:
    - name: create backup directory
      file:
        path: "{{ BACKUP_DIR }}"
        owner: borg
        group: borg
        state: directory
    
    - name: prepare disk for mount
      shell: |
        if [ $(mount | grep -e 'sda\s' | wc -l) -eq 0 ]
        then
          dd if=/dev/zero of="{{ MOUNT_DISK }}" bs=1M
          mkfs.ext4 "{{ MOUNT_DISK }}"
        fi
      notify:
        - mount backup

  handlers:
    - name: mount backup
      mount:
        path: "{{ BACKUP_DIR }}"
        src: "{{ MOUNT_DISK }}"
        fstype: ext4
        state: mounted


- name: configure borg client
  hosts: client
  become: true
  become_user: borg

  vars: 
    - ENCRIPTION_KEY: 'Otus1234'
    - BACKUPSERVER_IP: '192.168.56.112'
    - BACKUP_DIR: '/var/backup/'
    - REPO_DIR: '/var/backup/otus_repo/'

  tasks:
    - name: config ssh
      template:
        src: install_borgbackup/templates/ssh_config.j2
        dest: /home/borg/.ssh/config
        owner: borg
        mode: '600'
    
    - name: init borg repo
      shell: |
        BORG_PASSPHRASE=$ENCRIPTION_KEY borg init --encryption=keyfile borg@$BACKUPSERVER_IP:$REPO_DIR
    
    - name: copy backup service
      become: true
      become_user: root
      template:
        src: install_borgbackup/templates/borg-backup.service.j2
        dest: /etc/systemd/system/borg-backup.service 
        mode: '640'
  
    - name: copy timer config
      become: true
      become_user: root
      template:
        src: install_borgbackup/templates/borg-backup.timer.j2
        dest: /etc/systemd/system/borg-backup.timer
        mode: '640'
      notify:
        - restart borg-backup timer

  handlers:
    - name: restart borg-backup timer
      systemd:
        name: borg-backup.timer
        state: restarted
        enabled: yes
